apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: validate-task
spec:
  params:
    - name: ibmcloud-apikey-secret-key
      description: field in the secret that contains the api key used to login to ibmcloud
      default: apikey
    - name: continuous-delivery-context-secret
      description: Reference name for the secret resource
      default: "secure-properties"
    - name: WORKSPACE_ID
      description: The workspace id
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: apikey
      description: the ibmcloud api key
    - name: enable-automatic-plan-apply
      description: if true, a plan and apply will be automatically executed upon changes to the template code
  workspaces:
    - name: artifacts
      mountPath: /artifacts
  steps:
    - name: pre-commit
      image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.2
      env:
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: $(params.ibmcloud-apikey-secret-key)
              optional: true
        - name: WORKSPACE_ID
          value: $(params.WORKSPACE_ID)
        - name: IBM_CLOUD_API
          value: $(params.ibmcloud-api)
        - name: ENABLE_PLAN_APPLY
          value: $(params.enable-automatic-plan-apply)
      command: ["/bin/bash", "-c"]
      args:
        - |
          #!/bin/bash

          # Setup pre-commit
          yum update -yq && yum install -yq python3-pip
          rpm -qa | grep pip
          rpm -qlp python3-pip-9.0.3-23.el8_9.1.noarch
          rpm -qlp python3-pip-9.0.3-23.el8_9.1.noarch
          pip install pre-commit
          pre-commit --version

          echo "Workspace $WORKSPACE_ID"

          REGION="--no-region"
          # only parse the region if its the *NEW* workspace id format
          if [[ "$WORKSPACE_ID" == *".workspace"* ]]; then
              REGION=" -r $(echo $WORKSPACE_ID | cut -f1 -d.)"
          fi
          echo "REGION: $REGION"

          # force login (required by schematics cli)
          ibmcloud login --apikey $API_KEY -a "$IBM_CLOUD_API" $REGION

          WORKSPACE_REPO_URL=$(ibmcloud schematics workspace get --id $WORKSPACE_ID --json | jq -r ".template_repo.url")
          WORKSPACE_REPO_NAME=$(echo "$WORKSPACE_REPO_URL" | awk -F'/' '{print $NF}')
          WORKSPACE_FOLDER_PATH=$(ibmcloud schematics workspace get --id $WORKSPACE_ID --json | jq -r '.template_data[0].folder')

          cd /artifacts
          git clone $WORKSPACE_REPO_URL
          cd /artifacts/$WORKSPACE_REPO_NAME

          ls -la /artifacts/$WORKSPACE_REPO_NAME/$WORKSPACE_FOLDER_PATH/
          ls -la /cd-config/

          exit 1
      volumeMounts:
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
          - key: toolchain.json
            path: toolchain.json



