apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-diff-task
spec:
  params:
    - name: ibmcloud-apikey-secret-key
      description: field in the secret that contains the api key used to login to ibmcloud
      default: apikey
    - name: continuous-delivery-context-secret
      description: Reference name for the secret resource
      default: "secure-properties"
    - name: WORKSPACE_ID
      description: The workspace id
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: apikey
      description: the ibmcloud api key
    - name: git-token
      description: token to access the git repository
    - name: enable-automatic-plan-apply
      description: if true, a plan and apply will be automatically executed upon changes to the template code
  workspaces:
    - name: artifacts
      mountPath: /artifacts
  results:
    - name: diff
  steps:
    - name: check-changes
      image: de.icr.io/sandbox-nordcloud/pipeline-ubi:dev
      env:
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: $(params.ibmcloud-apikey-secret-key)
              optional: true
        - name: GIT_TOKEN
          value: $(params.git-token)
        - name: WORKSPACE_ID
          value: $(params.WORKSPACE_ID)
        - name: IBM_CLOUD_API
          value: $(params.ibmcloud-api)
        - name: ENABLE_PLAN_APPLY
          value: $(params.enable-automatic-plan-apply)
      command: ["/bin/bash", "-c"]
      args:
        - |
          #!/bin/bash

          echo "Workspace $WORKSPACE_ID"
          REGION="--no-region"
          # only parse the region if its the *NEW* workspace id format
          if [[ "$WORKSPACE_ID" == *".workspace"* ]]; then
              REGION=" -r $(echo $WORKSPACE_ID | cut -f1 -d.)"
          fi
          echo "REGION: $REGION"

          # force login (required by schematics cli)
          ibmcloud login --apikey $API_KEY -a "$IBM_CLOUD_API" $REGION

          # clone the repository
          GIT_AUTH_USER="x-oauth-basic"
          GIT_REPO_URL=$(ibmcloud schematics workspace get --id "$WORKSPACE_ID" --json | jq -r ".template_repo.url")
          GIT_AUTH_REPO_URL=$(echo "$GIT_REPO_URL" | sed -e "s/:\/\//:\/\/$GIT_AUTH_USER:$GIT_TOKEN@/g")
          GIT_REPO_NAME=$(echo "$GIT_REPO_URL" | awk -F'/' '{print $NF}')
          GIT_REPO_BRANCH=$(ibmcloud schematics workspace get --id "$WORKSPACE_ID" --json | jq -r ".template_repo.branch")

          if [ "$GIT_REPO_BRANCH" = "null" ]; then
            echo "No branch provided."
            exit 1
          fi

          cd /artifacts
          git clone --branch "$GIT_REPO_BRANCH" "$GIT_AUTH_REPO_URL"

          # Clone the repository to a temporary directory
          cd "/artifacts/$GIT_REPO_NAME"

          # Check if there are any changes affecting the specified folder
          git --no-pager diff --name-only HEAD^ HEAD -- "/artifacts/$GIT_REPO_NAME/02-schematics"
          if git diff --quiet HEAD^ HEAD -- "/artifacts/$GIT_REPO_NAME/02-schematics"; then
            echo "No changes affecting the folder"
            printf false | tee $(results.diff.path)
          else
            echo "Changes affecting the folder"
            printf true | tee $(results.diff.path)
          fi