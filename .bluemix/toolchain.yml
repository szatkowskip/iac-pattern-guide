version: 2
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  required:
    - terraform-template
    - tekton-deploy-pipeline
  info:
    #original static git url and branch string definitions
    #git url: >-
    #  [https://github.com/open-toolchain/schematics-toolchain](https://github.com/open-toolchain/schematics-toolchain)
    #git branch: >-
    #  [master](https://github.com/open-toolchain/schematics-toolchain/tree/master)

    # compute the git url and branch values dynamically so that they remain correct when repo is forked etc.
    # note: `repository` url param must always be provided while the `branch` url param is optional
    # the computed urls are of the same format as the original static urls shown above
    git url: >
      '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
      $env.branch ?
        '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
        '[master]('+ $env.repository + '/tree/master)'
    # set to mon01 to test in staging GRIT
    hosted_region: ""
toolchain:
  name: >
    $env.toolchainName ? '{{toolchainName}}' : 'schematics-ws-{{workspaceId}}-toolchain-{{timestamp}}'
services:
  devops-insights:
    service_id: >
      $env.env_id !== 'ibm:ys1:us-south' ? 'draservicebroker' : ''
  terraform-template:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: >
        $env.templateRepoName ? '{{templateRepoName}}' : 'schematics-ws-{{workspaceId}}-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ?
          $env.app_repo : 'https://github.com/Cloud-Schematics/cluster'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? $env.app_repo : 
          $env.templateEncodedZip ? '{{templateEncodedZip}}' : 
          'https://github.com/Cloud-Schematics/cluster'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
      legal: true
  schematics-pipeline:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: "schematics-pipeline-{{timestamp}}"
      repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/schematics-toolchain"
        } else {
          "https://github.com/open-toolchain/schematics-toolchain"
        }
      source_repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/schematics-toolchain"
        } else {
          "https://github.com/open-toolchain/schematics-toolchain"
        }
      type: "clone"
      has_issues: false
      enable_traceability: false
      legal: true
      kind: ["pipeline"]
  tekton-catalog:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: "tekton-catalog-{{timestamp}}"
      repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/tekton-catalog"
        } else {
          "https://github.com/open-toolchain/tekton-catalog"
        }
      source_repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/tekton-catalog"
        } else {
          "https://github.com/open-toolchain/tekton-catalog"
        }
      type: "clone"
      has_issues: false
      enable_traceability: false
      legal: true
      kind: ["pipeline"]
  tekton-pr-pipeline:
    parameters:
      label: schematics-pipeline
      type: tekton
      name: schematics-pr
      ui_pipeline: true
      configuration:
        env:
          terraform-template: terraform-template
          schematics-pipeline: schematics-pipeline
          tekton-catalog: tekton-catalog
          CATALOG_BRANCH: >
            $env.catalogBranch ? $env.catalogBranch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          TEMPLATE_BRANCH: >
            $env.branch ? $env.branch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          APP_BRANCH: >
            $env.appBranch ? $env.appBranch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          IBM_CLOUD_API: >
            $env.ibmcloudApi ? '{{ibmcloudApi}}' : "https://cloud.ibm.com"
          API_KEY: "{{form.pipeline.parameters.api-key}}"
          ENABLE_PLAN_APPLY: >
            if ( $env.solutionsBuilder === 'enabled' ) {
              'false';
            } else {
              'true';
            }
          event-listener-name: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-pr-listener';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-pr-listener';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-pr-listener';
            } else {
              'gitlab-pr-listener';
            }
        content:
          $text: pipeline-pr.yml
      services:
        - terraform-template
        - schematics-pipeline
        - tekton-catalog
    service_id: pipeline
  tekton-deploy-pipeline:
    parameters:
      label: schematics-pipeline
      type: tekton
      name: schematics-deploy
      ui_pipeline: true
      configuration:
        env:
          terraform-template: terraform-template
          schematics-pipeline: schematics-pipeline
          tekton-catalog: tekton-catalog
          CATALOG_BRANCH: >
            $env.catalogBranch ? $env.catalogBranch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          TEMPLATE_BRANCH: >
            $env.branch ? $env.branch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          APP_BRANCH: >
            $env.appBranch ? $env.appBranch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          IBM_CLOUD_API: >
            $env.ibmcloudApi ? '{{ibmcloudApi}}' : "https://cloud.ibm.com"
          API_KEY: "{{form.pipeline.parameters.api-key}}"
          WORKSPACE_ID: "{{form.pipeline.parameters.workspace-id}}"
          ENABLE_PLAN_APPLY: >
            if ( $env.solutionsBuilder === 'enabled' ) {
              'false';
            } else {
              'true';
            }
          event-ci-listener-name: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-ci-listener';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-ci-listener';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-ci-listener';
            } else {
              'gitlab-ci-listener';
            }
        content:
          $text: pipeline-deploy.yml
      services:
        - terraform-template
        - schematics-pipeline
        - tekton-catalog
    service_id: pipeline
  schematics:
    service_id: customtool
    parameters:
      type: Schematics
      lifecyclePhase: "MANAGE"
      imageUrl: "https://cloud.ibm.com/schematics/img/schematics-icon-f5c6503990.svg"
      documentationUrl: "https://cloud.ibm.com/docs/schematics?topic=schematics-about-schematics"
      name: "IBM Cloud Schematics workspace"
      dashboard_url: "/schematics/workspaces/{{form.pipeline.parameters.workspace-id}}"
      description: "Terraform-as-a-Service"
      additional-properties:  
form:
  pipeline:
    parameters:
      workspace-id: "{{workspaceId}}"
      api-key: "{{apiKey}}"
      console-solutions-api: "{{consoleSolutionsApi}}"
    schema:
      $ref: deploy.json
